{"version":3,"sources":["webpack:///./routes/resume/style.css","webpack:///../src/index.js","webpack:///./routes/resume/index.js"],"names":["module","exports","getHookState","index","options","_hook","currentComponent","hooks","__hooks","_list","_pendingEffects","length","push","useMemo","factory","args","state","currentIndex","argsChanged","_args","_factory","_value","flushAfterPaintEffects","afterPaintEffects","some","component","_parentDom","forEach","invokeCleanup","invokeEffect","e","_catchError","_vnode","hook","_cleanup","result","oldArgs","newArgs","arg","prevRaf","oldBeforeRender","_render","oldAfterDiff","diffed","oldCommit","_commit","oldBeforeUnmount","unmount","vnode","_component","c","requestAnimationFrame","callback","raf","done","clearTimeout","timeout","cancelAnimationFrame","setTimeout","window","commitQueue","_renderCallbacks","filter","cb","Resume","initialValue","iframe","current","class","style","pdfLinkWrapper","href","target","resumeWrapper","ref","src","frameborder","onLoad","obj","height","contentWindow","document","documentElement","scrollHeight"],"mappings":"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","file":"route-resume.chunk.985c3.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"resumeWrapper\":\"resumeWrapper__3APcH\",\"pdfLinkWrapper\":\"pdfLinkWrapper__3060V\"};","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tif (currentComponent.__hooks) {\n\t\tcurrentComponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\tcurrentComponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\tcurrentComponent.__hooks._pendingEffects = [];\n\t}\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (!c) return;\n\n\tconst hooks = c.__hooks;\n\tif (hooks) {\n\t\tif (hooks._pendingEffects.length) {\n\t\t\tafterPaint(afterPaintEffects.push(c));\n\t\t}\n\t}\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (!c) return;\n\n\tconst hooks = c.__hooks;\n\tif (hooks) {\n\t\ttry {\n\t\t\thooks._list.forEach(hook => hook._cleanup && hook._cleanup());\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @returns {import('./internal').HookState}\n */\nfunction getHookState(index) {\n\tif (options._hook) options._hook(currentComponent);\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = { _list: [], _pendingEffects: [] });\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} initialState\n */\nexport function useState(initialState) {\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++);\n\tif (!hookState._component) {\n\t\thookState._component = currentComponent;\n\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value[0] = nextValue;\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref === 'function') ref(createHandle());\n\t\t\telse if (ref) ref.current = createHandle();\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t\treturn (state._value = factory());\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\tif (!provider) return context._defaultValue;\n\tconst state = getHookState(currentIndex++);\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\nexport function useErrorBoundary(cb) {\n\tconst state = getHookState(currentIndex++);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tafterPaintEffects.some(component => {\n\t\tif (component._parentDom) {\n\t\t\ttry {\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, component._vnode);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t});\n\tafterPaintEffects = [];\n}\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tcancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (typeof window !== 'undefined') {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\tif (hook._cleanup) hook._cleanup();\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\tconst result = hook._value();\n\tif (typeof result === 'function') hook._cleanup = result;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn !oldArgs || newArgs.some((arg, index) => arg !== oldArgs[index]);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f === 'function' ? f(arg) : f;\n}\n","import { h, Fragment } from 'preact';\nimport { useRef } from 'preact/hooks'\nimport style from './style';\n// import Header from '../../components/header';\n\nconst Resume = () => {\n   const iframe = useRef(null);\n   return (\n      <Fragment>\n         {/* <Header /> */}\n         <div class={style.pdfLinkWrapper}>\n\n         <a href=\"https://adevkota.me/resume/Ashutosh%20Devkota.pdf\" target=\"_blank\">Pdf Version ↗</a>\n         </div>\n         <div class={style.resumeWrapper}>\n            <iframe ref={iframe} src=\"https://adevkota.me/resume/\" frameborder=\"0\" style=\"width:100%; height:100%;border:0;\" onLoad={() => resizeIframe(iframe)}/>\n         </div>\n      </Fragment>\n   )\n}\n\nfunction resizeIframe(obj) {\n   obj.current.style.height = (obj.current.contentWindow.document.documentElement.scrollHeight + 60)+ 'px';\n }\n\nexport default Resume;"],"sourceRoot":""}